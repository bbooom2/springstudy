<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model --> <!-- 애너테이션 활성화  -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" /> <!-- 정적자원들을 관리하는 디렉터리 정해서 매핑을 해주는 것. 주소의 리소스로 시작되는 걸로 하면 리소스 디렉터리로 연결된다. 이미지 리솔스파일에 넣는게 이런 의미 -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> <!-- 뷰리졸버 : jsp 파일을 뷰로 인식해서 해석하는 것. -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.gdu.app07" /> <!-- 이 패키지가 빈들인데 패키지 스캔을 해서 애너테이션이 달린 것들을 스캔을 해서 빈객체를 스프링컨테이너 내부에 서블릿 컨텍스트에 빈 객체로 해서 넣어 놓는 것. -->
	
	
	
</beans:beans>
